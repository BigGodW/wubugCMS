import{V as h,g as l,D as u,R as f}from"./@codemirror.js";class g{constructor(t){this.view=t,this.indentUnit=l(t.state),this.initialPaddingLeft=null,this.isChrome=window==null?void 0:window.navigator.userAgent.includes("Chrome"),this.generate(t.state)}update(t){const e=l(t.state);(e!==this.indentUnit||t.docChanged||t.viewportChanged)&&(this.indentUnit=e,this.generate(t.state))}generate(t){const e=new f;this.initialPaddingLeft?this.addStyleToBuilder(e,t,this.initialPaddingLeft):this.view.requestMeasure({read:i=>{const n=i.contentDOM.querySelector(".cm-line");n&&(this.initialPaddingLeft=window.getComputedStyle(n).getPropertyValue("padding-left"),this.addStyleToBuilder(e,i.state,this.initialPaddingLeft)),this.decorations=e.finish()}}),this.decorations=e.finish()}addStyleToBuilder(t,e,i){const n=this.getVisibleLines(e);for(const s of n){const{numColumns:o,containsTab:a}=this.numColumns(s.text,e.tabSize),r="calc(".concat(o+this.indentUnit,"ch + ").concat(i,")"),c=this.isChrome?"calc(-".concat(o+this.indentUnit,"ch - ").concat(a?1:0,"px)"):"-".concat(o+this.indentUnit,"ch");t.add(s.from,s.from,u.line({attributes:{style:"padding-left: ".concat(r,"; text-indent: ").concat(c,";")}}))}}getVisibleLines(t){const e=new Set;let i=null;for(const{from:n,to:s}of this.view.visibleRanges){let o=n;for(;o<=s;){const a=t.doc.lineAt(o);i!==a&&(e.add(a),i=a),o=a.to+1}}return e}numColumns(t,e){let i=0,n=!1;t:for(let s=0;s<t.length;s++)switch(t[s]){case" ":{i+=1;continue t}case"	":{i+=e-i%e,n=!0;continue t}case"\r":continue t;default:break t}return{numColumns:i,containsTab:n}}}const w=[h.fromClass(g,{decorations:d=>d.decorations})];export{w};
