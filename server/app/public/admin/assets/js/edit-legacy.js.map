{"version":3,"file":"edit-legacy.js","sources":["../../../src/views/admin/edit.vue"],"sourcesContent":["<template>\n  <div class=\"mr-10 mt-30 ml-10 mb-20\">\n    <el-form\n      ref=\"params\"\n      :model=\"params\"\n      :rules=\"paramsRules\"\n      label-width=\"84px\"\n      class\n    >\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input v-model=\"params.username\" :disabled=\"true\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input v-model=\"params.password\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"发布时间\">\n        <el-date-picker\n          v-model=\"params.updatedAt\"\n          type=\"datetime\"\n          placeholder=\"选择日期时间\"\n        ></el-date-picker>\n      </el-form-item>\n\n      <el-form-item label=\"是否显示\">\n        <el-radio v-model=\"params.status\" label=\"1\">启用</el-radio>\n        <el-radio v-model=\"params.status\" label=\"2\">关闭</el-radio>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submit('params')\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { update, detail } from \"@/api/admin.js\";\nimport { getCookie, setCookie } from \"@/utils/tool\";\nexport default {\n  name: \"admin-edit\",\n  data: () => {\n    return {\n      params: {\n        username: \"\",\n        password: \"\",\n        updatedAt: new Date(),\n        status: \"1\",\n      },\n      paramsRules: {\n        username: [\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n          {\n            min: 2,\n            max: 20,\n            message: \"2到20个字符\",\n            trigger: \"blur\",\n          },\n        ],\n        password: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          {\n            min: 6,\n            max: 20,\n            message: \"6到20个字符\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  computed: {},\n  mounted() {},\n  async created() {\n    this.params.id = this.$route.params.id;\n    this.username = getCookie(\"username\");\n    await this.detail();\n  },\n  methods: {\n    // 文章详情\n    async detail() {\n      try {\n        let res = await detail(this.params.id);\n        if (res.code === 200) {\n          let params = res.data;\n          params.status = params.status.toString();\n          params.updatedAt = new Date(params.createdAt);\n          this.params = params;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    //更新\n    async update() {\n      try {\n        let res = await update(this.params);\n        if (res.code == 200) {\n          if (this.params.username == this.username) {\n            this.$message({\n              message: \"密码更新成功,请重新登录^_^\",\n              type: \"success\",\n            });\n            setCookie(\"token\", \"\");\n            this.$router.push({ name: \"login-in\" });\n          } else {\n            this.$message({\n              message: \"更新成功^_^\",\n              type: \"success\",\n            });\n            this.$router.go(-1);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    submit(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.update();\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n<style></style>\n"],"names":["_hoisted_1","class","name","data","params","updatedAt","Date","username","max","message","trigger","password","created","this","id","$route","getCookie","detail","methods","res","code","status","toString","createdAt","console","error","update","$message","type","setCookie","$router","push","go","log","submit","formName","$refs","validate","valid","_openBlock","_createElementBlock","ref","model","_ctx","rules","paramsRules","label","prop","modelValue","_cache","$event","disabled","placeholder","onClick","$options"],"mappings":"gyBAwCA,MAvCOA,EAAA,CAAAC,MAAA,yCAuCP,CACEC,KAAA,aACAC,KAAAA,KACE,CACEC,OAAA,yBAGEC,UAAA,IAAAC,8BAIAC,SAAA,+CAEE,OAEEC,IAAA,GACAC,QAAA,UACAC,QAAA,SAGJC,SAAA,8CAEE,OAEEH,IAAA,GACAC,QAAA,UACAC,QAAA,oCAQV,aAAAE,GACEC,KAAAT,OAAAU,GAAAD,KAAAE,OAAAX,OAAAU,GACAD,KAAAN,SAAAS,EAAA,kBACAH,KAAAI,UAEFC,QAAA,gBAGI,IACE,IAAAC,QAAAF,EAAAJ,KAAAT,OAAAU,IACA,GAAA,MAAAK,EAAAC,KAAA,CACE,IAAAhB,EAAAe,EAAAhB,KACAC,EAAAiB,OAAAjB,EAAAiB,OAAAC,WACAlB,EAAAC,UAAA,IAAAC,KAAAF,EAAAmB,WACAV,KAAAT,OAAAA,CACF,WAEAoB,QAAAC,MAAAA,EACF,kBAKA,IAEE,YADAC,EAAAb,KAAAT,SACAgB,OACEP,KAAAT,OAAAG,UAAAM,KAAAN,UACEM,KAAAc,SAAA,2BAEEC,KAAA,YAEFC,EAAA,QAAA,IACAhB,KAAAiB,QAAAC,KAAA,CAAA7B,KAAA,eAEAW,KAAAc,SAAA,CACElB,QAAA,UACAmB,KAAA,YAEFf,KAAAiB,QAAAE,IAAA,cAIJR,QAAAS,IAAAR,EACF,GAGFS,MAAAA,CAAAC,GACEtB,KAAAuB,MAAAD,GAAAE,UAAAC,IACE,IAAAA,uDAKA,sEA9HN,OAAAC,IAAAC,EAAA,MAAAxC,EAAA,MAEIyC,IAAA,SACCC,MAAAC,EAAAvC,OACAwC,MAAAD,EAAAE,YACD,cAAA,OACA5C,MAAA,0BAEc6C,MAAA,MAAYC,KAAA,kCACLC,WAAAL,EAAAvC,OAAAG,SAAA,sBAAA0C,EAAA,KAAAA,EAAA,GAAAC,GAAAP,EAAAvC,OAAAG,SAAA2C,GAAkBC,UAAA,wCAGzBL,MAAA,KAAWC,KAAA,kCACJC,WAAAL,EAAAvC,OAAAO,SAAA,sBAAAsC,EAAA,KAAAA,EAAA,GAAAC,GAAAP,EAAAvC,OAAAO,SAAAuC,6EAKRF,WAAAL,EAAAvC,OAAAC,UAAA,sBAAA4C,EAAA,KAAAA,EAAA,GAAAC,GAAAP,EAAAvC,OAAAC,UAAA6C,GACTtB,KAAA,WACAwB,YAAA,mFAKiBJ,WAAAL,EAAAvC,OAAAiB,OAAA,sBAAA4B,EAAA,KAAAA,EAAA,GAAAC,GAAAP,EAAAvC,OAAAiB,OAAA6B,GAAeJ,MAAA,6DACfE,WAAAL,EAAAvC,OAAAiB,OAAA,sBAAA4B,EAAA,KAAAA,EAAA,GAAAC,GAAAP,EAAAvC,OAAAiB,OAAA6B,GAAeJ,MAAA,gGAIvBlB,KAAA,UAAgByB,QAAAJ,EAAA,KAAAA,EAAA,GAAAC,GAAAI,EAAApB,OAAA"}